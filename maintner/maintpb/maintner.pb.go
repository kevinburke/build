// Code generated by protoc-gen-go.
// source: maintner.proto
// DO NOT EDIT!

/*
Package maintpb is a generated protocol buffer package.

It is generated from these files:
	maintner.proto

It has these top-level messages:
	Mutation
	GithubIssueMutation
	GithubIssueCommentMutation
	GithubUser
	GithubMilestone
*/
package maintpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Mutation struct {
	GithubIssue *GithubIssueMutation `protobuf:"bytes,1,opt,name=github_issue,json=githubIssue" json:"github_issue,omitempty"`
}

func (m *Mutation) Reset()                    { *m = Mutation{} }
func (m *Mutation) String() string            { return proto.CompactTextString(m) }
func (*Mutation) ProtoMessage()               {}
func (*Mutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Mutation) GetGithubIssue() *GithubIssueMutation {
	if m != nil {
		return m.GithubIssue
	}
	return nil
}

type GithubIssueMutation struct {
	Owner            string                        `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	Repo             string                        `protobuf:"bytes,2,opt,name=repo" json:"repo,omitempty"`
	Number           int32                         `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	User             *GithubUser                   `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Assignees        []*GithubUser                 `protobuf:"bytes,10,rep,name=assignees" json:"assignees,omitempty"`
	DeletedAssignees []int64                       `protobuf:"varint,11,rep,packed,name=deleted_assignees,json=deletedAssignees" json:"deleted_assignees,omitempty"`
	Created          *google_protobuf.Timestamp    `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	Updated          *google_protobuf.Timestamp    `protobuf:"bytes,6,opt,name=updated" json:"updated,omitempty"`
	Body             string                        `protobuf:"bytes,7,opt,name=body" json:"body,omitempty"`
	Title            string                        `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Comment          []*GithubIssueCommentMutation `protobuf:"bytes,8,rep,name=comment" json:"comment,omitempty"`
}

func (m *GithubIssueMutation) Reset()                    { *m = GithubIssueMutation{} }
func (m *GithubIssueMutation) String() string            { return proto.CompactTextString(m) }
func (*GithubIssueMutation) ProtoMessage()               {}
func (*GithubIssueMutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GithubIssueMutation) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *GithubIssueMutation) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *GithubIssueMutation) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GithubIssueMutation) GetUser() *GithubUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GithubIssueMutation) GetAssignees() []*GithubUser {
	if m != nil {
		return m.Assignees
	}
	return nil
}

func (m *GithubIssueMutation) GetDeletedAssignees() []int64 {
	if m != nil {
		return m.DeletedAssignees
	}
	return nil
}

func (m *GithubIssueMutation) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GithubIssueMutation) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *GithubIssueMutation) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *GithubIssueMutation) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GithubIssueMutation) GetComment() []*GithubIssueCommentMutation {
	if m != nil {
		return m.Comment
	}
	return nil
}

type GithubIssueCommentMutation struct {
	Id      int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	User    *GithubUser                `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Body    string                     `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Created *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=created" json:"created,omitempty"`
	Updated *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=updated" json:"updated,omitempty"`
}

func (m *GithubIssueCommentMutation) Reset()                    { *m = GithubIssueCommentMutation{} }
func (m *GithubIssueCommentMutation) String() string            { return proto.CompactTextString(m) }
func (*GithubIssueCommentMutation) ProtoMessage()               {}
func (*GithubIssueCommentMutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GithubIssueCommentMutation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GithubIssueCommentMutation) GetUser() *GithubUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GithubIssueCommentMutation) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *GithubIssueCommentMutation) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *GithubIssueCommentMutation) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

type GithubUser struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Login string `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
}

func (m *GithubUser) Reset()                    { *m = GithubUser{} }
func (m *GithubUser) String() string            { return proto.CompactTextString(m) }
func (*GithubUser) ProtoMessage()               {}
func (*GithubUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GithubUser) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GithubUser) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

type GithubMilestone struct {
	Id           int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Number       int32       `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	Title        string      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description  string      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	OpenIssues   int32       `protobuf:"varint,5,opt,name=open_issues,json=openIssues" json:"open_issues,omitempty"`
	ClosedIssues int32       `protobuf:"varint,6,opt,name=closed_issues,json=closedIssues" json:"closed_issues,omitempty"`
	Creator      *GithubUser `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
}

func (m *GithubMilestone) Reset()                    { *m = GithubMilestone{} }
func (m *GithubMilestone) String() string            { return proto.CompactTextString(m) }
func (*GithubMilestone) ProtoMessage()               {}
func (*GithubMilestone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GithubMilestone) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GithubMilestone) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GithubMilestone) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GithubMilestone) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GithubMilestone) GetOpenIssues() int32 {
	if m != nil {
		return m.OpenIssues
	}
	return 0
}

func (m *GithubMilestone) GetClosedIssues() int32 {
	if m != nil {
		return m.ClosedIssues
	}
	return 0
}

func (m *GithubMilestone) GetCreator() *GithubUser {
	if m != nil {
		return m.Creator
	}
	return nil
}

func init() {
	proto.RegisterType((*Mutation)(nil), "maintpb.Mutation")
	proto.RegisterType((*GithubIssueMutation)(nil), "maintpb.GithubIssueMutation")
	proto.RegisterType((*GithubIssueCommentMutation)(nil), "maintpb.GithubIssueCommentMutation")
	proto.RegisterType((*GithubUser)(nil), "maintpb.GithubUser")
	proto.RegisterType((*GithubMilestone)(nil), "maintpb.GithubMilestone")
}

func init() { proto.RegisterFile("maintner.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xdf, 0x8a, 0xd4, 0x30,
	0x14, 0xc6, 0x99, 0x76, 0x3a, 0xb3, 0x73, 0xba, 0xae, 0x9a, 0x5d, 0xa4, 0x0c, 0x82, 0xa5, 0x7b,
	0xe1, 0x80, 0xd8, 0xc1, 0xd5, 0x3b, 0x11, 0x11, 0x2f, 0x44, 0x64, 0x6f, 0x8a, 0x5e, 0x2f, 0xfd,
	0x73, 0xac, 0x81, 0x36, 0x09, 0x49, 0x8a, 0xec, 0x83, 0xf9, 0x28, 0xbe, 0x82, 0xcf, 0x21, 0x3d,
	0x69, 0xa7, 0xa3, 0xbb, 0xc3, 0x8a, 0x77, 0x39, 0x27, 0xbf, 0x2f, 0xcd, 0xf9, 0xbe, 0x14, 0x4e,
	0xda, 0x9c, 0x0b, 0x2b, 0x50, 0xa7, 0x4a, 0x4b, 0x2b, 0xd9, 0x92, 0x6a, 0x55, 0xac, 0x5f, 0xd7,
	0xdc, 0x7e, 0xeb, 0x8a, 0xb4, 0x94, 0xed, 0xb6, 0x96, 0x4d, 0x2e, 0xea, 0x2d, 0x11, 0x45, 0xf7,
	0x75, 0xab, 0xec, 0xb5, 0x42, 0xb3, 0xb5, 0xbc, 0x45, 0x63, 0xf3, 0x56, 0x4d, 0x2b, 0x77, 0x4a,
	0xf2, 0x09, 0x8e, 0x2e, 0x3b, 0x9b, 0x5b, 0x2e, 0x05, 0x7b, 0x0b, 0xc7, 0xee, 0xa8, 0x2b, 0x6e,
	0x4c, 0x87, 0xd1, 0x2c, 0x9e, 0x6d, 0xc2, 0x8b, 0xc7, 0xe9, 0xf0, 0xa1, 0xf4, 0x03, 0x6d, 0x7e,
	0xec, 0xf7, 0x46, 0x4d, 0x16, 0xd6, 0x53, 0x33, 0xf9, 0xe1, 0xc3, 0xe9, 0x2d, 0x10, 0x3b, 0x83,
	0x40, 0x7e, 0x17, 0xa8, 0xe9, 0xc4, 0x55, 0xe6, 0x0a, 0xc6, 0x60, 0xae, 0x51, 0xc9, 0xc8, 0xa3,
	0x26, 0xad, 0xd9, 0x23, 0x58, 0x88, 0xae, 0x2d, 0x50, 0x47, 0x7e, 0x3c, 0xdb, 0x04, 0xd9, 0x50,
	0xb1, 0xa7, 0x30, 0xef, 0x0c, 0xea, 0x68, 0x4e, 0x57, 0x3a, 0xfd, 0xeb, 0x4a, 0x5f, 0x0c, 0xea,
	0x8c, 0x00, 0xf6, 0x02, 0x56, 0xb9, 0x31, 0xbc, 0x16, 0x88, 0x26, 0x82, 0xd8, 0x3f, 0x44, 0x4f,
	0x14, 0x7b, 0x06, 0x0f, 0x2b, 0x6c, 0xd0, 0x62, 0x75, 0x35, 0x49, 0xc3, 0xd8, 0xdf, 0xf8, 0xd9,
	0x83, 0x61, 0xe3, 0xdd, 0x0e, 0x7e, 0x05, 0xcb, 0x52, 0x63, 0x6e, 0xb1, 0x8a, 0x02, 0xba, 0xcb,
	0x3a, 0xad, 0xa5, 0xac, 0x1b, 0x4c, 0x47, 0xcf, 0xd3, 0xcf, 0xa3, 0xc5, 0xd9, 0x88, 0xf6, 0xaa,
	0x4e, 0x55, 0xa4, 0x5a, 0xdc, 0xad, 0x1a, 0xd0, 0xde, 0xa0, 0x42, 0x56, 0xd7, 0xd1, 0xd2, 0x19,
	0xd4, 0xaf, 0x7b, 0x2b, 0x2d, 0xb7, 0x0d, 0x46, 0x2b, 0x67, 0x25, 0x15, 0xec, 0x0d, 0x2c, 0x4b,
	0xd9, 0xb6, 0x28, 0x6c, 0x74, 0x44, 0x33, 0x9f, 0xdf, 0x16, 0xda, 0x7b, 0x87, 0xec, 0xb2, 0x1b,
	0x35, 0xc9, 0xcf, 0x19, 0xac, 0x0f, 0x73, 0xec, 0x04, 0x3c, 0x5e, 0x51, 0x76, 0x7e, 0xe6, 0xf1,
	0x6a, 0x17, 0x86, 0x77, 0x57, 0x18, 0xe3, 0x00, 0xfe, 0xde, 0x00, 0x7b, 0x06, 0xce, 0xff, 0xcb,
	0xc0, 0xe0, 0x9f, 0x0d, 0x4c, 0x2e, 0x00, 0xa6, 0x3b, 0xdd, 0x18, 0xe3, 0x0c, 0x82, 0x46, 0xd6,
	0x5c, 0x0c, 0x0f, 0xd0, 0x15, 0xc9, 0xaf, 0x19, 0xdc, 0x77, 0xa2, 0x4b, 0xde, 0xa0, 0xb1, 0x52,
	0xe0, 0x0d, 0xe5, 0xf4, 0x4a, 0xbd, 0x3f, 0x5e, 0xe9, 0x2e, 0x1c, 0x7f, 0x3f, 0x9c, 0x18, 0xc2,
	0x0a, 0x4d, 0xa9, 0xb9, 0xea, 0xdd, 0xa4, 0xa9, 0x57, 0xd9, 0x7e, 0x8b, 0x3d, 0x81, 0x50, 0x2a,
	0x14, 0xee, 0xb7, 0x33, 0x34, 0x61, 0x90, 0x41, 0xdf, 0xa2, 0x3c, 0x0c, 0x3b, 0x87, 0x7b, 0x65,
	0x23, 0x0d, 0x56, 0x23, 0xb2, 0x20, 0xe4, 0xd8, 0x35, 0x07, 0xe8, 0xf9, 0xe0, 0xac, 0xd4, 0xf4,
	0x62, 0x0e, 0x24, 0x33, 0x32, 0xc5, 0x82, 0x9c, 0x7b, 0xf9, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x0b,
	0x4f, 0x88, 0xb4, 0x58, 0x04, 0x00, 0x00,
}
